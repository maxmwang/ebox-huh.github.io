{"version":3,"sources":["server.js","views/Login.jsx","components/Item.js","components/AddItem.js","components/ItemList.js","views/Home.jsx","views/Signup.jsx","App.jsx","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","database","newUser","username","password","ref","update","sha256","userExists","a","once","snapshot","exists","verifyPassword","hash","val","generateToken","currentToken","token","key32","window","crypto","getRandomValues","Uint32Array","i","length","toString","verifyToken","realToken","getUserData","mediaType","type","data","hoverReducer","state","action","Login","props","useState","setUsername","setPassword","uError","setUError","pError","setPError","useReducer","s","_","hidePassword","swapHidePassword","loginHover","swapLoginHover","signupHover","swapSignupHover","handleText","value","handleInputClick","handleLoginClick","logIn","useEffect","isValid","navigate","className","onKeyPress","e","key","Typography","variant","FormControl","error","Boolean","InputLabel","Input","onClick","onChange","target","FormHelperText","color","endAdornment","InputAdornment","position","IconButton","Button","onMouseEnter","onMouseLeave","Item","original","title","link","season","episode","chapter","new","itemHasUpdated","bind","updateItem","navigator","clipboard","writeText","this","toggleSnackbar","n","includes","isNaN","Number","console","log","setState","prevState","Grid","item","xs","container","direction","justify","size","handleInput","Paper","style","noWrap","copyLink","renderSeasonCounter","renderEpisodeChapterCounter","alignItems","disabled","React","Component","AddItem","titleError","linkError","submit","submitManga","submitAnime","TextField","width","inputProps","textAlign","padding","maxWidth","borderStyle","borderWidth","borderColor","direciton","label","margin","ItemList","undefined","setData","tab","newData","isEqual","items","Object","entries","push","map","Home","changeTab","snackbar","refresh","Tabs","v","centered","Tab","signOut","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","message","Signup","confirm","setConfirm","cError","setCError","hideConfirm","swapHideConfirm","handleSignupClick","App","localStorage","getItem","setToken","u","t","setItem","destroyToken","removeItem","isValidSession","path","default","theme","createMuiTheme","palette","primary","main","secondary","background","paper","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.c792c90d.chunk.js","sourcesContent":["import firebase from 'firebase';\nimport sha256 from 'js-sha256';\n\nfirebase.initializeApp({\n  apiKey: 'AIzaSyBeotHm7O-r4F2YUedhn9WMZrTI5U0Hs_M',\n  authDomain: 'anman-list.firebaseapp.com',\n  databaseURL: 'https://anman-list-default-rtdb.firebaseio.com',\n  projectId: 'anman-list',\n  storageBucket: 'anman-list.appspot.com',\n  messagingSenderId: '763409917320',\n  appId: '1:763409917320:web:6034f95cf87d62d8b9463d'\n});\nconst db = firebase.database();\n\n\nexport function newUser(username, password) {\n  db.ref('passwords/').update({\n    [username]: sha256(password)\n  });\n  return;\n}\n\nexport async function userExists(username) {\n  let exists;\n  await db.ref(`passwords/${username}`).once('value', snapshot => {\n    exists = snapshot.exists();\n  });\n  return exists\n}\n\nexport async function verifyPassword(username, password) {\n  let hash;\n  await db.ref(`passwords/${username}`).once('value', snapshot => {\n    hash = snapshot.val();\n  });\n  return sha256(password) === hash;\n}\n\nexport function modifyPassword(username, oldPassword, newPassword) {\n  return;\n}\n\nexport async function generateToken(username) {\n  let currentToken;\n  await db.ref(`tokens/${username}`).once('value', snapshot => {\n    currentToken = snapshot.val();\n  });\n  if (currentToken) {\n    return currentToken;\n  }\n\n  let token = '';\n  const key32 = window.crypto.getRandomValues(new Uint32Array(4));\n  for (let i = 0; i < key32.length; i++) {\n    token += (i > 0) ? '-' : '';\n    token += key32[i].toString(16);\n  }\n\n  db.ref('tokens/').update({\n    [username]: token\n  });\n  return token;\n}\n\nexport async function verifyToken(username, token) {\n  if (!username) {\n    return false;\n  }\n\n  let realToken;\n  await db.ref(`tokens/${username}`).once('value', snapshot => {\n    realToken = snapshot.val();\n  });\n\n  return realToken === token;\n}\n\nexport function destroyToken(username) {\n  db.ref('tokens/').update({\n    [username]: null\n  });\n}\n\nexport function newManga(username, type, title, data) {\n  db.ref(`${username}/mangas/${type}`).update({\n    [title]: data,\n  });\n}\n\nexport function modifyManga(username, { title, link, chapter }) {\n  return;\n}\n\nexport function removeManga(username, title) {\n  return;\n}\n\nexport function newAnime(username, type, title, data) {\n  db.ref(`${username}/animes/${type}`).update({\n    [title]: data,\n  });\n}\n\nexport function modifyAnime(username, type, title, data) {\n  db.ref(`${username}/animes/${type}/${title}`).update(data);\n}\n\nexport function removeAnime(username, title) {\n  return;\n}\n\nexport async function getUserData(username, mediaType, type) {\n  let data;\n  await db.ref(`${username}/${mediaType}s/${type}`).once('value', snapshot => {\n    data = snapshot.val();\n  });\n  return data;\n}\n","import React, { useState, useReducer, useEffect } from 'react';\nimport { navigate } from \"@reach/router\";\n\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Typography from '@material-ui/core/Typography';\n\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport './LoginSignup.css';\n\nimport { userExists, verifyPassword } from '../server';\n\n\nfunction hoverReducer(state, action) {\n  switch (action) {\n    case 'enter':\n      return true;\n    case 'leave':\n      return false;\n    default:\n      return false;\n  }\n}\n\nfunction Login(props) {\n  const [username, setUsername]          = useState('');\n  const [password, setPassword]          = useState('');\n  const [uError, setUError]              = useState('');\n  const [pError, setPError]              = useState('');\n  const [hidePassword, swapHidePassword] = useReducer((s, _) => !s, true);\n  const [loginHover, swapLoginHover]     = useReducer(hoverReducer, false);\n  const [signupHover, swapSignupHover]   = useReducer(hoverReducer, false);\n\n\n  const handleText = (type, value) => {\n    if (type === 'username') {\n      setUsername(value);\n      setUError('');\n    } else if (type === 'password') {\n      setPassword(value);\n      setPError('');\n    }\n  }\n  const handleInputClick = (type) => {\n    if (type === 'username') {\n      setUError('');\n    } else if (type === 'password') {\n      setPError('');\n    }\n  }\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleLoginClick();\n    }\n  }\n  const handleLoginClick = async () => {\n    if (username === '') {\n      setUError('Invalid username.');\n      return;\n    } else if (!(await userExists(username))) {\n      setUError('Username does not exist.');\n      return;\n    }\n\n    if (password === '') {\n      setPError('Invalid password.');\n      return;\n    } else if (!(await verifyPassword(username, password))) {\n      setPError('Incorrect password.');\n      return;\n    }\n\n    await props.logIn(username);\n  }\n\n  useEffect(() => {\n    const a = async () => {\n      if (await props.isValid()) {\n        navigate('/home');\n      }\n    }\n    a();\n  });\n\n  return (\n    <div className='LoginSignup' onKeyPress={handleKeyPress}>\n      <Typography variant='h5'>\n        LOGIN\n      </Typography>\n\n      <br />\n\n      <FormControl error={Boolean(uError)}>\n        <InputLabel>Username</InputLabel>\n        <Input\n          className='input'\n          value={username}\n          onClick={() => handleInputClick('username')}\n          onChange={e => handleText('username', e.target.value)} />\n        <FormHelperText color='secondary'>{uError || ' '}</FormHelperText>\n      </FormControl>\n\n      <br /><br />\n\n      <FormControl error={Boolean(pError)}>\n        <InputLabel>Password</InputLabel>\n        <Input\n          className='input'\n          error={Boolean(pError)}\n          type={hidePassword ? 'password' : 'text'}\n          value={password}\n          onClick={() => handleInputClick('password')}\n          onChange={e => handleText('password', e.target.value)}\n          endAdornment={\n            <InputAdornment position='end'>\n              <IconButton onClick={swapHidePassword}>\n                {hidePassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>} />\n        <FormHelperText color='secondary'>{pError || ' '}</FormHelperText>\n      </FormControl>\n\n      <br /><br />\n\n      <Button\n        className='button'\n        variant={loginHover ? 'contained' : 'outlined'}\n        color='primary'\n        onClick={handleLoginClick}\n        onMouseEnter={() => swapLoginHover('enter')}\n        onMouseLeave={() => swapLoginHover('leave')}>\n        Login\n      </Button>\n\n      <br /><br />\n\n      <Button\n        className='button'\n        variant={signupHover ? 'outlined' : 'text'}\n        color='primary'\n        onClick={ () => navigate('/signup') }\n        onMouseEnter={() => swapSignupHover('enter')}\n        onMouseLeave={() => swapSignupHover('leave')}>\n        Sign Up\n      </Button>\n\n    </div>\n  );\n}\n\n\nexport default Login;\n","import React from 'react';\n\nimport './Item.css';\n\nimport Grid        from '@material-ui/core/Grid';\nimport Paper       from '@material-ui/core/Paper';\nimport Typography  from '@material-ui/core/Typography';\nimport IconButton  from '@material-ui/core/IconButton';\n\nimport ClearIcon from '@material-ui/icons/Clear';\nimport CheckIcon from '@material-ui/icons/Check';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport { Snackbar } from '@material-ui/core';\n\nclass Item extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      original: {\n        title:   this.props.title,\n        link:    this.props.link,\n        season:  this.props.season,\n        episode: this.props.episode,\n        chapter: this.props.chapter,\n      },\n      new: {\n        title:   this.props.title,\n        link:    this.props.link,\n        season:  this.props.season,\n        episode: this.props.episode,\n        chapter: this.props.chapter,\n      },\n    };\n\n    this.itemHasUpdated = this.itemHasUpdated.bind(this);\n    this.updateItem = this.updateItem.bind(this);\n  }\n\n  copyLink() {\n    navigator.clipboard.writeText(this.state.new.link);\n    this.props.toggleSnackbar();\n  }\n\n  itemHasUpdated() {\n    const original = this.state.original;\n    const n = this.state.new;\n\n    if (original.title && original.title !== n.title) {\n      return true;\n    }\n    if (original.link && original.link !== n.link) {\n      return true;\n    }\n    if (original.season && original.season !== n.season) {\n      return true;\n    }\n    if (original.episode && original.episode !== n.episode) {\n      return true;\n    }\n    if (original.chapter && original.chapter !== n.chapter) {\n      return true;\n    }\n    return false;\n  }\n\n  updateItem() {\n    if (this.itemHasUpdated()) {\n      this.props.update(this.state.new.title, this.state.new)\n    }\n  }\n\n  handleInput(type, value) {\n    if (type === 'epch') {\n      type = this.props.type === 'manga' ? 'chapter' : 'episode';\n    }\n\n    if (['season', 'episode', 'chapter'].includes(type)) {\n      if (isNaN(Number(value))) {\n        return;\n      }\n\n      value = Number(value)\n\n      if (value < 0) {\n        value = 0;\n      }\n      console.log(value);\n    }\n\n    this.setState(prevState => ({\n      new: {\n        ...prevState.new,\n        [type]: value\n      }\n    }));\n    console.log(this.state);\n  }\n\n  renderSeasonCounter() {\n    return (\n      <Grid item xs container direction='column' justify='center'>\n        <Grid item>\n          <IconButton size='small' onClick={ () => this.handleInput('season', this.state.new.season + 1) }>\n            <KeyboardArrowUpIcon />\n          </IconButton>\n        </Grid>\n        <Grid item>\n          <Typography variant='overline'>{this.state.new.season}</Typography>\n        </Grid>\n        <Grid item>\n          <IconButton size='small' onClick={ () => this.handleInput('season', this.state.new.season - 1) }>\n            <KeyboardArrowDownIcon />\n          </IconButton>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  renderEpisodeChapterCounter() {\n    return (\n      <Grid item xs container direction='column' justify='center'>\n        <Grid item>\n          <IconButton size='small' onClick={ () => this.handleInput('epch', this.props.type === 'manga' ? this.state.new.chapter + 1 : this.state.new.episode + 1) }>\n            <KeyboardArrowUpIcon />\n          </IconButton>\n        </Grid>\n        <Grid item>\n          <Typography variant='overline'>{this.props.type === 'manga' ? this.state.new.chapter : this.state.new.episode}</Typography>\n        </Grid>\n        <Grid item>\n          <IconButton size='small' onClick={ () => this.handleInput('epch', this.props.type === 'manga' ? this.state.chapter - 1 : this.state.new.episode - 1) }>\n            <KeyboardArrowDownIcon />\n          </IconButton>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  render() {\n    return (\n      <Paper className='Item'>\n        <Grid container direction='row' className='cell'>\n          <Grid item xs={9} container direction='column' className='contentText'>\n            <Grid item style={{ 'width': '100%' }}>\n              <Typography noWrap variant='h6'>\n                {this.state.new.title}\n              </Typography>\n            </Grid>\n            <br/>\n            <Grid item container direction='row'>\n              <Grid item xs>\n                <Typography noWrap variant='body2' color=\"primary\" onClick={() => this.copyLink()}>\n                  <a className=\"link\">{this.state.new.link}</a>\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item xs={2} container>\n            {this.props.type === 'manga' ? <div/> : this.renderSeasonCounter()}\n            {this.renderEpisodeChapterCounter()}\n          </Grid>\n\n          <Grid item xs={1} container justify=\"center\" alignItems=\"center\">\n            <IconButton disabled={!this.itemHasUpdated()} onClick={this.updateItem} >\n              <CheckIcon />\n            </IconButton>\n            <IconButton disabled={!this.itemHasUpdated()} onClick={this.updateItem}>\n              <ClearIcon />\n            </IconButton>\n          </Grid>\n        </Grid>\n      </Paper>\n    );\n  }\n}\n\nexport default Item;\n","import React from 'react';\n\nimport './Item.css';\n\nimport Grid       from '@material-ui/core/Grid';\nimport Paper      from '@material-ui/core/Paper';\nimport Button     from '@material-ui/core/Button';\nimport TextField  from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\n\nclass AddItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title:   this.props.title   || '',\n      link:    this.props.link    || '',\n      season:  this.props.season  || 1,\n      episode: this.props.episode || 1,\n      chapter: this.props.chapter || 1,\n      titleError: false,\n      linkError: false,\n    };\n\n    this.submit = this.submit.bind(this);\n  }\n\n  handleInput(type, value) {\n    if (type === 'epch') {\n      type = this.props.type === 'manga' ? 'chapter' : 'episode';\n    }\n\n    if (['season', 'episode', 'chapter'].includes(type)) {\n      if (isNaN(Number(value))) {\n        return;\n      }\n\n      value = Number(value)\n\n      if (value < 0) {\n        value = 0;\n      }\n    }\n\n    this.setState({ [type]: value });\n  }\n\n  handleInputClick(type) {\n    this.setState({\n      titleError: type === 'title' ? false : this.state.titleError,\n      linkError:  type === 'link' ? false : this.state.linkError,\n    });\n  }\n\n  async submit() {\n    // check if inputs are valid\n    if (!this.state.title) {\n      this.setState({ titleError: true });\n      return;\n    }\n    if (!this.state.link) {\n      this.setState({ linkError: true })\n      return;\n    }\n\n    if (this.props.type === 'manga') {\n      await this.props.submitManga(this.state.title, { 'chapter': this.state.chapter, 'link': this.state.link });\n    } else {\n      await this.props.submitAnime(this.state.title, { 'season': this.state.season, 'episode': this.state.episode, 'link': this.state.link });\n    }\n\n    this.setState({\n      title: '',\n      link: '',\n      season: 1,\n      episode: 1,\n      chapter: 1,\n      titleError: false,\n      linkError: false,\n    });\n  }\n\n  renderSeasonCounter() {\n    return (\n      <Grid item xs container direction='column' justify='center'>\n        <Grid item>\n          <IconButton\n            size='small'\n            onClick={ () => this.handleInput('season', this.state.season + 1) } >\n            <KeyboardArrowUpIcon />\n          </IconButton>\n        </Grid>\n        <Grid item>\n          <TextField\n            variant='outlined'\n            size='small'\n            style={{ width: '90%' }}\n            inputProps={{style: { textAlign: 'center',  padding: '10.5px 7px'}}}\n            value={this.state.season}\n            onChange={ (e) => this.handleInput('season', e.target.value) }/>\n        </Grid>\n        <Grid item>\n          <IconButton\n            size='small'\n            onClick={ () => this.handleInput('season', this.state.season - 1) } >\n            <KeyboardArrowDownIcon />\n          </IconButton>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  renderEpisodeChapterCounter() {\n    return (\n      <Grid item xs container direction='column' justify='center'>\n        <Grid item>\n          <IconButton\n            size='small'\n            onClick={ () => this.handleInput('epch', this.props.type === 'manga' ? this.state.chapter + 1 : this.state.episode + 1) } >\n            <KeyboardArrowUpIcon />\n          </IconButton>\n        </Grid>\n        <Grid item>\n          <TextField\n            variant='outlined'\n            size='small'\n            style={{ width: '90%', maxWidth: '50px' }}\n            inputProps={{style: { textAlign: 'center',  padding: '10.5px 7px'}}}\n            value={this.props.type === 'manga' ? this.state.chapter : this.state.episode}\n            onChange={ (e) => this.handleInput('epch', e.target.value) }/>\n        </Grid>\n        <Grid item>\n          <IconButton\n            size='small'\n            onClick={ () => this.handleInput('epch', this.props.type === 'manga' ? this.state.chapter - 1 : this.state.episode - 1) }>\n            <KeyboardArrowDownIcon />\n          </IconButton>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  render() {\n    return (\n      <Paper className='Item' style={{ borderStyle: 'solid', borderWidth: '1px', borderColor: '#5F527A' }}>\n        <Grid container direction='row' className='cell'>\n          <Grid item xs={10} container direction='column' className='contentText'>\n            <Grid item container direciton='row' alignItems='center'>\n              <TextField\n                label='Title'\n                error={this.state.titleError}\n                variant='outlined'\n                style={{ width: '90%' }}\n                value={this.state.title}\n                onClick={ () => this.handleInputClick('title') }\n                onChange={ (e) => this.handleInput('title', e.target.value) }/>\n            </Grid>\n            <br/>\n            <Grid item container direction='row' alignItems='center'>\n              <TextField\n                label='Link'\n                error={this.state.linkError}\n                variant='outlined'\n                size='small'\n                style={{ width: '75%', margin: '0 5% 0 0' }}\n                value={this.state.link}\n                onClick={ () => this.handleInputClick('link') }\n                onChange={ (e) => this.handleInput('link', e.target.value) }/>\n              <Button variant='outlined' onClick={this.submit}>Add</Button>\n            </Grid>\n          </Grid>\n          <Grid item xs container>\n            {this.props.type === 'manga' ? <div/> : this.renderSeasonCounter()}\n            {this.renderEpisodeChapterCounter()}\n          </Grid>\n        </Grid>\n      </Paper>\n    );\n  }\n}\n\nexport default AddItem;\n","import React, { useState, useEffect } from 'react';\nimport isEqual from 'lodash.isequal';\n\nimport './ItemList.css';\n\nimport { getUserData } from '../server';\nimport Item    from './Item';\nimport AddItem from './AddItem';\n\n\nfunction ItemList(props) {\n  const [data, setData] = useState(undefined);\n\n  useEffect(() => {\n    const a = async () => {\n      const newData = await getUserData(props.username, props.tab, 'ongoing')\n      if (!isEqual(data, newData)) {\n        setData(newData);\n      }\n    };\n    a();\n  });\n\n  if (!data) {\n    return (\n      <div className='ItemList'>\n        <AddItem\n          type={props.mediaType}/>\n      </div>\n    );\n  }\n\n  let items = [];\n  for (const [key, value] of Object.entries(data)) {\n    items.push({title: key, season: value.season, episode: value.episode, chapter: value.chapter, link: value.link});\n  }\n\n  return (\n    <div className='ItemList'>\n      <AddItem\n        type={props.mediaType}/>\n      {items.map(a => {\n        return <Item\n                  key={a.title}\n                  title={a.title}\n                  season={a.season}\n                  episode={a.episode}\n                  chapter={a.chapter}\n                  link={a.link}\n                  type={props.mediaType}\n                  toggleSnackbar={props.toggleSnackbar}/>})}\n    </div>\n  );\n}\n\nexport default ItemList;\n\n/*\nclass ItemList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: this.props.userData,\n    };\n  }\n\n  async componentDidUpdate(prevState) {\n    if (this.props.data !== prevState.data) {\n      this.setState({ data: this.props.data });\n    }\n  }\n\n  updateItem(title, data) {\n    this.props.server.modifyAnime(this.props.username, this.props.type, title, data);\n  }\n\n  async submitAnime(title, data) {\n    this.props.server.newAnime(this.props.username, this.props.type, title, data);\n    await this.props.refresh();\n  }\n\n  async submitManga(title, data) {\n    this.props.server.newManga(this.props.username, this.props.type, title, data);\n    await this.props.refresh();\n  }\n\n  render() {\n    if (!this.state.data) {\n      return (\n        <div className='ItemList'>\n          <AddItem\n            submitAnime={ (t, d) => this.submitAnime(t, d) }\n            submitManga={ (t, d) => this.submitManga(t, d) }\n            type={this.props.mediaType}/>\n        </div>\n      );\n    }\n\n    let items = [];\n    for (const [key, value] of Object.entries(this.state.data)) {\n      items.push({title: key, season: value.season, episode: value.episode, chapter: value.chapter, link: value.link});\n    }\n    console.log(items)\n\n    return (\n      <div className='ItemList'>\n        <AddItem\n          submitAnime={ (t, d) => this.submitAnime(t, d) }\n          submitManga={ (t, d) => this.submitManga(t, d) }\n          type={this.props.mediaType}/>\n        {items.map(a => {\n          return <Item\n                    key={a.title}\n                    title={a.title}\n                    season={a.season}\n                    episode={a.episode}\n                    chapter={a.chapter}\n                    link={a.link}\n                    type={this.props.mediaType}\n                    update={this.updateItem}\n                    toggleSnackbar={this.props.toggleSnackbar}/>})}\n      </div>\n    );\n  }\n}\n\nexport default ItemList;\n*/\n","import React, { useState, useReducer, useEffect } from 'react';\nimport { navigate } from \"@reach/router\";\n\nimport './Home.css';\n\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport ItemList from '../components/ItemList';\n\n\nfunction Home(props) {\n  const [tab, changeTab]           = useState('anime');\n  const [snackbar, toggleSnackbar] = useReducer((s, _) => !s, false);\n\n  const handleSignOutClick = () => {\n    props.signOut();\n    navigate('/login');\n  }\n  const refresh = async () => {\n    if (!await props.isValid()) {\n      navigate('/login');\n    }\n  }\n  useEffect(() => {\n    const a = async () => {\n      await refresh();\n    }\n    a();\n  });\n\n  return (\n    <div className='Home'>\n      <Paper>\n        <Tabs\n          value={tab}\n          onChange={(_, v) => changeTab(v)}\n          centered>\n          <Tab value='anime' label='anime' />\n          <Tab value='manga' label='manga' />\n        </Tabs>\n      </Paper>\n\n      <br /><br />\n\n      <Button\n        className='signout'\n        variant='outlined'\n        color='primary'\n        onClick={handleSignOutClick}>\n        Sign Out\n      </Button>\n\n      <br /><br />\n\n      <ItemList\n        username={props.username}\n        tab={tab}\n        type='ongoing'\n        refresh={refresh}\n        toggleSnackbar={toggleSnackbar} />\n\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={snackbar}\n        autoHideDuration={3000}\n        onClose={toggleSnackbar}\n        message=\"Link copied.\" />\n    </div>\n  );\n}\n\nexport default Home;\n\n/*\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tab: 'anime',\n      snackbarOpen: false,\n    };\n\n    if (!this.props.username || !this.props.token) {\n      this.state = { leavePage: 'login' };\n    }\n\n    this.refresh            = this.refresh.bind(this);\n    this.handleTab          = this.handleTab.bind(this);\n    this.toggleSnackbar     = this.toggleSnackbar.bind(this);\n    this.handleSignOutClick = this.handleSignOutClick.bind(this);\n  }\n\n  toggleSnackbar() {\n    this.setState({ snackbarOpen: !this.state.snackbarOpen });\n  }\n\n  async componentDidMount() {\n    await this.refresh();\n  }\n\n  async refresh() {\n    if (!await this.props.isValid()) {\n      this.setState({ leavePage: 'login' });\n    }\n    this.setState({\n      userData: await this.props.server.getUserData(this.props.username, this.state.tab, 'ongoing')\n    });\n  }\n\n  async shouldComponentUpdate(nextProps, nextState) {\n    if (!await nextProps.isValid()) {\n      this.setState({ leavePage: 'login' });\n    }\n    return  true;\n  }\n\n  async handleTab(e, newValue) {\n    this.setState({ tab: newValue });\n    await this.refresh()\n  }\n\n  handleSignOutClick() {\n    this.props.signOut();\n    this.setState({ leavePage: 'login' });\n  }\n\n  render() {\n    if (this.state.leavePage) {\n      return <Redirect to={this.state.leavePage} />;\n    }\n\n    return (\n      <div className='Home'>\n        <Paper>\n          <Tabs\n            value={this.state.tab}\n            onChange={this.handleTab}\n            centered>\n            <Tab value='anime' label='anime' />\n            <Tab value='manga' label='manga' />\n          </Tabs>\n        </Paper>\n\n        <br/><br/>\n\n        <Button\n          className='signout'\n          variant='outlined'\n          color='primary'\n          onClick={this.handleSignOutClick}>\n            Sign Out\n        </Button>\n        <br/><br/>\n        <ItemList\n          username={this.props.username}\n          mediaType={this.state.tab}\n          type='ongoing'\n          server={this.props.server}\n          data={this.state.userData}\n          refresh={this.refresh}\n          toggleSnackbar={this.toggleSnackbar}/>\n\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.state.snackbarOpen}\n          autoHideDuration={3000}\n          onClose={this.toggleSnackbar}\n          message=\"Link copied.\"/>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n*/\n","\nimport React, { useState, useEffect, useReducer } from 'react';\nimport { navigate } from \"@reach/router\";\n\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Typography from '@material-ui/core/Typography';\n\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport './LoginSignup.css';\n\nimport { userExists, newUser } from '../server';\n\n\nfunction hoverReducer(state, action) {\n  switch (action) {\n    case 'enter':\n      return true;\n    case 'leave':\n      return false;\n    default:\n      return false;\n  }\n}\n\nfunction Signup(props) {\n  const [username, setUsername]          = useState('');\n  const [password, setPassword]          = useState('');\n  const [confirm, setConfirm]            = useState('');\n  const [uError, setUError]              = useState('');\n  const [pError, setPError]              = useState('');\n  const [cError, setCError]              = useState('');\n  const [hidePassword, swapHidePassword] = useReducer((s, _) => !s, true);\n  const [hideConfirm, swapHideConfirm]   = useReducer((s, _) => !s, true);\n  const [loginHover, swapLoginHover]     = useReducer(hoverReducer, false);\n  const [signupHover, swapSignupHover]   = useReducer(hoverReducer, false);\n\n  const handleText = (type, value) => {\n    if (type === 'username') {\n      setUsername(value);\n      setUError('');\n    } else if (type === 'password') {\n      setPassword(value);\n      setPError('');\n    } else if (type === 'confirm') {\n      setConfirm(value);\n      setCError('');\n    }\n  }\n  const handleInputClick = (type) => {\n    if (type === 'username') {\n      setUError('');\n    } else if (type === 'password') {\n      setPError('');\n    } else if (type === 'confirm') {\n      setCError('');\n    }\n  }\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSignupClick();\n    }\n  }\n  const handleSignupClick = async () => {\n    if (username === '') {\n      setUError('Invalid username.');\n      return;\n    } else if (await userExists(username)) {\n      setUError('Username already taken.');\n      return;\n    }\n\n    if (password === '') {\n      setPError('Invalid password.');\n      return;\n    } else if (password !== confirm) {\n      setPError('Passwords don\\'t match.');\n      return;\n    }\n\n    newUser(username, password);\n    await props.logIn(username);\n  }\n\n  useEffect(() => {\n    const a = async () => {\n      if (await props.isValid()) {\n        navigate('/home');\n      }\n    }\n    a();\n  });\n\n  return (\n    <div className='LoginSignup' onKeyPress={handleKeyPress}>\n      <Typography variant='h5'>\n        SIGN UP\n      </Typography>\n\n      <br />\n\n      <FormControl error={Boolean(uError)}>\n        <InputLabel>Username</InputLabel>\n        <Input\n          className='input'\n          value={username}\n          onClick={() => handleInputClick('username')}\n          onChange={e => handleText('username', e.target.value)} />\n        <FormHelperText color='secondary'>{uError || ' '}</FormHelperText>\n      </FormControl>\n\n      <br /><br />\n\n      <FormControl error={Boolean(pError)}>\n        <InputLabel>Password</InputLabel>\n        <Input\n          className='input'\n          error={Boolean(pError)}\n          type={hidePassword ? 'password' : 'text'}\n          value={password}\n          onClick={() => handleInputClick('password')}\n          onChange={e => handleText('password', e.target.value)}\n          endAdornment={\n            <InputAdornment position='end'>\n              <IconButton onClick={swapHidePassword}>\n                {hidePassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>} />\n        <FormHelperText color='secondary'>{pError || ' '}</FormHelperText>\n      </FormControl>\n\n      <br /><br />\n\n      <FormControl error={Boolean(cError)}>\n        <InputLabel>Confirm Password</InputLabel>\n        <Input\n          className='input'\n          error={Boolean(cError)}\n          type={hideConfirm ? 'password' : 'text'}\n          value={confirm}\n          onClick={() => handleInputClick('confirm')}\n          onChange={e => handleText('confirm', e.target.value)}\n          endAdornment={\n            <InputAdornment position='end'>\n              <IconButton onClick={swapHideConfirm}>\n                {hideConfirm ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>} />\n        <FormHelperText color='secondary'>{cError || ' '}</FormHelperText>\n      </FormControl>\n\n      <br /><br />\n\n      <Button\n        className='button'\n        variant={signupHover ? 'contained' : 'outlined'}\n        color='primary'\n        onClick={handleSignupClick}\n        onMouseEnter={() => swapSignupHover('enter')}\n        onMouseLeave={() => swapSignupHover('leave')}>\n        Sign up\n      </Button>\n\n      <br /><br />\n\n      <Button\n        className='button'\n        variant={loginHover ? 'outlined' : ''}\n        color='primary'\n        onClick={ () => navigate('/login') }\n        onMouseEnter={() => swapLoginHover('enter')}\n        onMouseLeave={() => swapLoginHover('leave')}>\n        Login\n      </Button>\n    </div>\n  )\n}\n\nexport default Signup;\n","import React, {useState} from 'react';\nimport { Router } from \"@reach/router\";\n\nimport './App.css';\n\nimport {generateToken, verifyToken, destroyToken} from './server';\nimport Login    from './views/Login.jsx';\nimport Home     from './views/Home.jsx';\nimport Signup   from './views/Signup.jsx';\n\n\nfunction App(props) {\n  const [username, setUsername] = useState(localStorage.getItem('username'));\n  const [token, setToken]       = useState(localStorage.getItem('token'));\n\n  const logIn = async (u) => {\n    const t = await generateToken(u);\n    setUsername(u);\n    setToken(t);\n    localStorage.setItem('username', u);\n    localStorage.setItem('token', t);\n  }\n  const signOut = () => {\n    destroyToken(username);\n    setUsername(undefined);\n    setToken(undefined);\n    localStorage.removeItem('username');\n    localStorage.removeItem('token');\n  }\n  const isValidSession = async () => {\n    return await verifyToken(username, token);\n  }\n\n  return (\n    <Router>\n      <Home\n        path='/home'\n        username={username}\n        token={token}\n        signOut={ () => signOut() }\n        isValid={ () => isValidSession() }/>\n      <Login\n        default\n        path='/login'\n        logIn={ (u) => logIn(u) }\n        isValid={ () => isValidSession() } />\n      <Signup\n        path='/signup'\n        logIn={ (u) => logIn(u) }\n        isValid={ () => isValidSession() } />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#987CCF',\n    },\n    secondary: {\n      main: '#EE99FF',\n    },\n    background: {\n      default: '#222639',\n      paper: '#1B1E2E',\n    },\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
{"version":3,"sources":["server.js","views/Login.jsx","components/Item.js","components/AddItem.js","components/ItemList.js","views/Home.jsx","views/Signup.jsx","App.jsx","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","database","newUser","username","password","ref","update","Object","defineProperty","sha256","userExists","_x","_userExists","apply","this","arguments","_callee","exists","regenerator_default","a","wrap","_context","prev","next","concat","once","snapshot","abrupt","stop","verifyPassword","_x2","_x3","_verifyPassword","_callee2","hash","_context2","val","generateToken","_x4","_generateToken","_callee3","currentToken","token","key32","i","_context3","window","crypto","getRandomValues","Uint32Array","length","toString","verifyToken","_x5","_x6","_verifyToken","_callee4","realToken","_context4","getUserData","_x7","_x8","_x9","_getUserData","_callee5","mediaType","type","data","_context5","hoverReducer","state","action","Login","props","_useState","useState","_useState2","slicedToArray","setUsername","_useState3","_useState4","setPassword","_useState5","_useState6","uError","setUError","_useState7","_useState8","pError","setPError","_useReducer","useReducer","s","_","_useReducer2","hidePassword","swapHidePassword","_useReducer3","_useReducer4","loginHover","swapLoginHover","_useReducer5","_useReducer6","signupHover","swapSignupHover","handleText","value","handleInputClick","handleLoginClick","_ref","asyncToGenerator","mark","sent","logIn","useEffect","_ref2","isValid","navigate","react_default","createElement","className","onKeyPress","e","key","Typography","variant","FormControl","error","Boolean","InputLabel","Input","onClick","onChange","target","FormHelperText","color","endAdornment","InputAdornment","position","IconButton","VisibilityOff_default","Visibility_default","Button","onMouseEnter","onMouseLeave","Item","_this","classCallCheck","_super","call","original","title","link","season","episode","chapter","new","itemHasUpdated","bind","assertThisInitialized","updateItem","navigator","clipboard","writeText","toggleSnackbar","n","includes","isNaN","Number","console","log","setState","prevState","objectSpread","_this2","Grid","item","xs","container","direction","justify","size","handleInput","KeyboardArrowUp_default","KeyboardArrowDown_default","_this3","_this4","Paper","style","width","noWrap","copyLink","renderSeasonCounter","renderEpisodeChapterCounter","alignItems","disabled","Check_default","Clear_default","React","Component","AddItem","titleError","linkError","submit","submitManga","submitAnime","TextField","inputProps","textAlign","padding","maxWidth","borderStyle","borderWidth","borderColor","direciton","label","margin","ItemList","undefined","setData","newData","tab","isEqual","components_AddItem","items","_i","_Object$entries","entries","_ref4","_ref3","push","map","src_components_Item","Home","changeTab","snackbar","refresh","Tabs","v","centered","Tab","signOut","components_ItemList","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","message","Signup","confirm","setConfirm","_useState9","_useState10","_useState11","_useState12","cError","setCError","hideConfirm","swapHideConfirm","_useReducer7","_useReducer8","handleSignupClick","App","localStorage","getItem","setToken","u","t","setItem","destroyToken","removeItem","isValidSession","es","views_Home","path","views_Login","default","views_Signup","theme","createMuiTheme","palette","primary","main","secondary","background","paper","ReactDOM","render","ThemeProvider","CssBaseline","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.47158ee8.chunk.js","sourcesContent":["import firebase from 'firebase';\nimport sha256 from 'js-sha256';\n\nfirebase.initializeApp({\n  apiKey: 'AIzaSyBeotHm7O-r4F2YUedhn9WMZrTI5U0Hs_M',\n  authDomain: 'anman-list.firebaseapp.com',\n  databaseURL: 'https://anman-list-default-rtdb.firebaseio.com',\n  projectId: 'anman-list',\n  storageBucket: 'anman-list.appspot.com',\n  messagingSenderId: '763409917320',\n  appId: '1:763409917320:web:6034f95cf87d62d8b9463d'\n});\nconst db = firebase.database();\n\n\nexport function newUser(username, password) {\n  db.ref('passwords/').update({\n    [username]: sha256(password)\n  });\n  return;\n}\n\nexport async function userExists(username) {\n  let exists;\n  await db.ref(`passwords/${username}`).once('value', snapshot => {\n    exists = snapshot.exists();\n  });\n  return exists\n}\n\nexport async function verifyPassword(username, password) {\n  let hash;\n  await db.ref(`passwords/${username}`).once('value', snapshot => {\n    hash = snapshot.val();\n  });\n  return sha256(password) === hash;\n}\n\nexport function modifyPassword(username, oldPassword, newPassword) {\n  return;\n}\n\nexport async function generateToken(username) {\n  let currentToken;\n  await db.ref(`tokens/${username}`).once('value', snapshot => {\n    currentToken = snapshot.val();\n  });\n  if (currentToken) {\n    return currentToken;\n  }\n\n  let token = '';\n  const key32 = window.crypto.getRandomValues(new Uint32Array(4));\n  for (let i = 0; i < key32.length; i++) {\n    token += (i > 0) ? '-' : '';\n    token += key32[i].toString(16);\n  }\n\n  db.ref('tokens/').update({\n    [username]: token\n  });\n  return token;\n}\n\nexport async function verifyToken(username, token) {\n  if (!username) {\n    return false;\n  }\n\n  let realToken;\n  await db.ref(`tokens/${username}`).once('value', snapshot => {\n    realToken = snapshot.val();\n  });\n\n  return realToken === token;\n}\n\nexport function destroyToken(username) {\n  db.ref('tokens/').update({\n    [username]: null\n  });\n}\n\nexport function newManga(username, type, title, data) {\n  db.ref(`${username}/mangas/${type}`).update({\n    [title]: data,\n  });\n}\n\nexport function modifyManga(username, { title, link, chapter }) {\n  return;\n}\n\nexport function removeManga(username, title) {\n  return;\n}\n\nexport function newAnime(username, type, title, data) {\n  db.ref(`${username}/animes/${type}`).update({\n    [title]: data,\n  });\n}\n\nexport function modifyAnime(username, type, title, data) {\n  db.ref(`${username}/animes/${type}/${title}`).update(data);\n}\n\nexport function removeAnime(username, title) {\n  return;\n}\n\nexport async function getUserData(username, mediaType, type) {\n  let data;\n  await db.ref(`${username}/${mediaType}s/${type}`).once('value', snapshot => {\n    data = snapshot.val();\n  });\n  return data;\n}\n","import React, { useState, useReducer, useEffect } from 'react';\nimport { navigate } from \"@reach/router\";\n\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Typography from '@material-ui/core/Typography';\n\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport './LoginSignup.css';\n\nimport { userExists, verifyPassword } from '../server';\n\n\nfunction hoverReducer(state, action) {\n  switch (action) {\n    case 'enter':\n      return true;\n    case 'leave':\n      return false;\n    default:\n      return false;\n  }\n}\n\nfunction Login(props) {\n  const [username, setUsername]          = useState('');\n  const [password, setPassword]          = useState('');\n  const [uError, setUError]              = useState('');\n  const [pError, setPError]              = useState('');\n  const [hidePassword, swapHidePassword] = useReducer((s, _) => !s, true);\n  const [loginHover, swapLoginHover]     = useReducer(hoverReducer, false);\n  const [signupHover, swapSignupHover]   = useReducer(hoverReducer, false);\n\n\n  const handleText = (type, value) => {\n    if (type === 'username') {\n      setUsername(value);\n      setUError('');\n    } else if (type === 'password') {\n      setPassword(value);\n      setPError('');\n    }\n  }\n  const handleInputClick = (type) => {\n    if (type === 'username') {\n      setUError('');\n    } else if (type === 'password') {\n      setPError('');\n    }\n  }\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleLoginClick();\n    }\n  }\n  const handleLoginClick = async () => {\n    if (username === '') {\n      setUError('Invalid username.');\n      return;\n    } else if (!(await userExists(username))) {\n      setUError('Username does not exist.');\n      return;\n    }\n\n    if (password === '') {\n      setPError('Invalid password.');\n      return;\n    } else if (!(await verifyPassword(username, password))) {\n      setPError('Incorrect password.');\n      return;\n    }\n\n    await props.logIn(username);\n  }\n\n  useEffect(() => {\n    const a = async () => {\n      if (await props.isValid()) {\n        navigate('/home');\n      }\n    }\n    a();\n  });\n\n  return (\n    <div className='LoginSignup' onKeyPress={handleKeyPress}>\n      <Typography variant='h5'>\n        LOGIN\n      </Typography>\n\n      <br />\n\n      <FormControl error={Boolean(uError)}>\n        <InputLabel>Username</InputLabel>\n        <Input\n          className='input'\n          value={username}\n          onClick={() => handleInputClick('username')}\n          onChange={e => handleText('username', e.target.value)} />\n        <FormHelperText color='secondary'>{uError || ' '}</FormHelperText>\n      </FormControl>\n\n      <br /><br />\n\n      <FormControl error={Boolean(pError)}>\n        <InputLabel>Password</InputLabel>\n        <Input\n          className='input'\n          error={Boolean(pError)}\n          type={hidePassword ? 'password' : 'text'}\n          value={password}\n          onClick={() => handleInputClick('password')}\n          onChange={e => handleText('password', e.target.value)}\n          endAdornment={\n            <InputAdornment position='end'>\n              <IconButton onClick={swapHidePassword}>\n                {hidePassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>} />\n        <FormHelperText color='secondary'>{pError || ' '}</FormHelperText>\n      </FormControl>\n\n      <br /><br />\n\n      <Button\n        className='button'\n        variant={loginHover ? 'contained' : 'outlined'}\n        color='primary'\n        onClick={handleLoginClick}\n        onMouseEnter={() => swapLoginHover('enter')}\n        onMouseLeave={() => swapLoginHover('leave')}>\n        Login\n      </Button>\n\n      <br /><br />\n\n      <Button\n        className='button'\n        variant={signupHover ? 'outlined' : 'text'}\n        color='primary'\n        onClick={ () => navigate('/signup') }\n        onMouseEnter={() => swapSignupHover('enter')}\n        onMouseLeave={() => swapSignupHover('leave')}>\n        Sign Up\n      </Button>\n\n    </div>\n  );\n}\n\n\nexport default Login;\n","import React from 'react';\n\nimport './Item.css';\n\nimport Grid        from '@material-ui/core/Grid';\nimport Paper       from '@material-ui/core/Paper';\nimport Typography  from '@material-ui/core/Typography';\nimport IconButton  from '@material-ui/core/IconButton';\n\nimport ClearIcon from '@material-ui/icons/Clear';\nimport CheckIcon from '@material-ui/icons/Check';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport { Snackbar } from '@material-ui/core';\n\nclass Item extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      original: {\n        title:   this.props.title,\n        link:    this.props.link,\n        season:  this.props.season,\n        episode: this.props.episode,\n        chapter: this.props.chapter,\n      },\n      new: {\n        title:   this.props.title,\n        link:    this.props.link,\n        season:  this.props.season,\n        episode: this.props.episode,\n        chapter: this.props.chapter,\n      },\n    };\n\n    this.itemHasUpdated = this.itemHasUpdated.bind(this);\n    this.updateItem = this.updateItem.bind(this);\n  }\n\n  copyLink() {\n    navigator.clipboard.writeText(this.state.new.link);\n    this.props.toggleSnackbar();\n  }\n\n  itemHasUpdated() {\n    const original = this.state.original;\n    const n = this.state.new;\n\n    if (original.title && original.title !== n.title) {\n      return true;\n    }\n    if (original.link && original.link !== n.link) {\n      return true;\n    }\n    if (original.season && original.season !== n.season) {\n      return true;\n    }\n    if (original.episode && original.episode !== n.episode) {\n      return true;\n    }\n    if (original.chapter && original.chapter !== n.chapter) {\n      return true;\n    }\n    return false;\n  }\n\n  updateItem() {\n    if (this.itemHasUpdated()) {\n      this.props.update(this.state.new.title, this.state.new)\n    }\n  }\n\n  handleInput(type, value) {\n    if (type === 'epch') {\n      type = this.props.type === 'manga' ? 'chapter' : 'episode';\n    }\n\n    if (['season', 'episode', 'chapter'].includes(type)) {\n      if (isNaN(Number(value))) {\n        return;\n      }\n\n      value = Number(value)\n\n      if (value < 0) {\n        value = 0;\n      }\n      console.log(value);\n    }\n\n    this.setState(prevState => ({\n      new: {\n        ...prevState.new,\n        [type]: value\n      }\n    }));\n    console.log(this.state);\n  }\n\n  renderSeasonCounter() {\n    return (\n      <Grid item xs container direction='column' justify='center'>\n        <Grid item>\n          <IconButton size='small' onClick={ () => this.handleInput('season', this.state.new.season + 1) }>\n            <KeyboardArrowUpIcon />\n          </IconButton>\n        </Grid>\n        <Grid item>\n          <Typography variant='overline'>{this.state.new.season}</Typography>\n        </Grid>\n        <Grid item>\n          <IconButton size='small' onClick={ () => this.handleInput('season', this.state.new.season - 1) }>\n            <KeyboardArrowDownIcon />\n          </IconButton>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  renderEpisodeChapterCounter() {\n    return (\n      <Grid item xs container direction='column' justify='center'>\n        <Grid item>\n          <IconButton size='small' onClick={ () => this.handleInput('epch', this.props.type === 'manga' ? this.state.new.chapter + 1 : this.state.new.episode + 1) }>\n            <KeyboardArrowUpIcon />\n          </IconButton>\n        </Grid>\n        <Grid item>\n          <Typography variant='overline'>{this.props.type === 'manga' ? this.state.new.chapter : this.state.new.episode}</Typography>\n        </Grid>\n        <Grid item>\n          <IconButton size='small' onClick={ () => this.handleInput('epch', this.props.type === 'manga' ? this.state.chapter - 1 : this.state.new.episode - 1) }>\n            <KeyboardArrowDownIcon />\n          </IconButton>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  render() {\n    return (\n      <Paper className='Item'>\n        <Grid container direction='row' className='cell'>\n          <Grid item xs={9} container direction='column' className='contentText'>\n            <Grid item style={{ 'width': '100%' }}>\n              <Typography noWrap variant='h6'>\n                {this.state.new.title}\n              </Typography>\n            </Grid>\n            <br/>\n            <Grid item container direction='row'>\n              <Grid item xs>\n                <Typography noWrap variant='body2' color=\"primary\" onClick={() => this.copyLink()}>\n                  <a className=\"link\">{this.state.new.link}</a>\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item xs={2} container>\n            {this.props.type === 'manga' ? <div/> : this.renderSeasonCounter()}\n            {this.renderEpisodeChapterCounter()}\n          </Grid>\n\n          <Grid item xs={1} container justify=\"center\" alignItems=\"center\">\n            <IconButton disabled={!this.itemHasUpdated()} onClick={this.updateItem} >\n              <CheckIcon />\n            </IconButton>\n            <IconButton disabled={!this.itemHasUpdated()} onClick={this.updateItem}>\n              <ClearIcon />\n            </IconButton>\n          </Grid>\n        </Grid>\n      </Paper>\n    );\n  }\n}\n\nexport default Item;\n","import React from 'react';\n\nimport './Item.css';\n\nimport Grid       from '@material-ui/core/Grid';\nimport Paper      from '@material-ui/core/Paper';\nimport Button     from '@material-ui/core/Button';\nimport TextField  from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\n\nclass AddItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title:   this.props.title   || '',\n      link:    this.props.link    || '',\n      season:  this.props.season  || 1,\n      episode: this.props.episode || 1,\n      chapter: this.props.chapter || 1,\n      titleError: false,\n      linkError: false,\n    };\n\n    this.submit = this.submit.bind(this);\n  }\n\n  handleInput(type, value) {\n    if (type === 'epch') {\n      type = this.props.type === 'manga' ? 'chapter' : 'episode';\n    }\n\n    if (['season', 'episode', 'chapter'].includes(type)) {\n      if (isNaN(Number(value))) {\n        return;\n      }\n\n      value = Number(value)\n\n      if (value < 0) {\n        value = 0;\n      }\n    }\n\n    this.setState({ [type]: value });\n  }\n\n  handleInputClick(type) {\n    this.setState({\n      titleError: type === 'title' ? false : this.state.titleError,\n      linkError:  type === 'link' ? false : this.state.linkError,\n    });\n  }\n\n  async submit() {\n    // check if inputs are valid\n    if (!this.state.title) {\n      this.setState({ titleError: true });\n      return;\n    }\n    if (!this.state.link) {\n      this.setState({ linkError: true })\n      return;\n    }\n\n    if (this.props.type === 'manga') {\n      await this.props.submitManga(this.state.title, { 'chapter': this.state.chapter, 'link': this.state.link });\n    } else {\n      await this.props.submitAnime(this.state.title, { 'season': this.state.season, 'episode': this.state.episode, 'link': this.state.link });\n    }\n\n    this.setState({\n      title: '',\n      link: '',\n      season: 1,\n      episode: 1,\n      chapter: 1,\n      titleError: false,\n      linkError: false,\n    });\n  }\n\n  renderSeasonCounter() {\n    return (\n      <Grid item xs container direction='column' justify='center'>\n        <Grid item>\n          <IconButton\n            size='small'\n            onClick={ () => this.handleInput('season', this.state.season + 1) } >\n            <KeyboardArrowUpIcon />\n          </IconButton>\n        </Grid>\n        <Grid item>\n          <TextField\n            variant='outlined'\n            size='small'\n            style={{ width: '90%' }}\n            inputProps={{style: { textAlign: 'center',  padding: '10.5px 7px'}}}\n            value={this.state.season}\n            onChange={ (e) => this.handleInput('season', e.target.value) }/>\n        </Grid>\n        <Grid item>\n          <IconButton\n            size='small'\n            onClick={ () => this.handleInput('season', this.state.season - 1) } >\n            <KeyboardArrowDownIcon />\n          </IconButton>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  renderEpisodeChapterCounter() {\n    return (\n      <Grid item xs container direction='column' justify='center'>\n        <Grid item>\n          <IconButton\n            size='small'\n            onClick={ () => this.handleInput('epch', this.props.type === 'manga' ? this.state.chapter + 1 : this.state.episode + 1) } >\n            <KeyboardArrowUpIcon />\n          </IconButton>\n        </Grid>\n        <Grid item>\n          <TextField\n            variant='outlined'\n            size='small'\n            style={{ width: '90%', maxWidth: '50px' }}\n            inputProps={{style: { textAlign: 'center',  padding: '10.5px 7px'}}}\n            value={this.props.type === 'manga' ? this.state.chapter : this.state.episode}\n            onChange={ (e) => this.handleInput('epch', e.target.value) }/>\n        </Grid>\n        <Grid item>\n          <IconButton\n            size='small'\n            onClick={ () => this.handleInput('epch', this.props.type === 'manga' ? this.state.chapter - 1 : this.state.episode - 1) }>\n            <KeyboardArrowDownIcon />\n          </IconButton>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  render() {\n    return (\n      <Paper className='Item' style={{ borderStyle: 'solid', borderWidth: '1px', borderColor: '#5F527A' }}>\n        <Grid container direction='row' className='cell'>\n          <Grid item xs={10} container direction='column' className='contentText'>\n            <Grid item container direciton='row' alignItems='center'>\n              <TextField\n                label='Title'\n                error={this.state.titleError}\n                variant='outlined'\n                style={{ width: '90%' }}\n                value={this.state.title}\n                onClick={ () => this.handleInputClick('title') }\n                onChange={ (e) => this.handleInput('title', e.target.value) }/>\n            </Grid>\n            <br/>\n            <Grid item container direction='row' alignItems='center'>\n              <TextField\n                label='Link'\n                error={this.state.linkError}\n                variant='outlined'\n                size='small'\n                style={{ width: '75%', margin: '0 5% 0 0' }}\n                value={this.state.link}\n                onClick={ () => this.handleInputClick('link') }\n                onChange={ (e) => this.handleInput('link', e.target.value) }/>\n              <Button variant='outlined' onClick={this.submit}>Add</Button>\n            </Grid>\n          </Grid>\n          <Grid item xs container>\n            {this.props.type === 'manga' ? <div/> : this.renderSeasonCounter()}\n            {this.renderEpisodeChapterCounter()}\n          </Grid>\n        </Grid>\n      </Paper>\n    );\n  }\n}\n\nexport default AddItem;\n","import React, { useState, useEffect } from 'react';\nimport isEqual from 'lodash.isequal';\n\nimport './ItemList.css';\n\nimport { getUserData } from '../server';\nimport Item    from './Item';\nimport AddItem from './AddItem';\n\n\nfunction ItemList(props) {\n  const [data, setData] = useState(undefined);\n\n  useEffect(() => {\n    const a = async () => {\n      const newData = await getUserData(props.username, props.tab, 'ongoing')\n      if (!isEqual(data, newData)) {\n        setData(newData);\n      }\n    };\n    a();\n  });\n\n  if (!data) {\n    return (\n      <div className='ItemList'>\n        <AddItem\n          type={props.mediaType}/>\n      </div>\n    );\n  }\n\n  let items = [];\n  for (const [key, value] of Object.entries(data)) {\n    items.push({title: key, season: value.season, episode: value.episode, chapter: value.chapter, link: value.link});\n  }\n\n  return (\n    <div className='ItemList'>\n      <AddItem\n        type={props.mediaType}/>\n      {items.map(a => {\n        return <Item\n                  key={a.title}\n                  title={a.title}\n                  season={a.season}\n                  episode={a.episode}\n                  chapter={a.chapter}\n                  link={a.link}\n                  type={props.mediaType}\n                  toggleSnackbar={props.toggleSnackbar}/>})}\n    </div>\n  );\n}\n\nexport default ItemList;\n\n/*\nclass ItemList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: this.props.userData,\n    };\n  }\n\n  async componentDidUpdate(prevState) {\n    if (this.props.data !== prevState.data) {\n      this.setState({ data: this.props.data });\n    }\n  }\n\n  updateItem(title, data) {\n    this.props.server.modifyAnime(this.props.username, this.props.type, title, data);\n  }\n\n  async submitAnime(title, data) {\n    this.props.server.newAnime(this.props.username, this.props.type, title, data);\n    await this.props.refresh();\n  }\n\n  async submitManga(title, data) {\n    this.props.server.newManga(this.props.username, this.props.type, title, data);\n    await this.props.refresh();\n  }\n\n  render() {\n    if (!this.state.data) {\n      return (\n        <div className='ItemList'>\n          <AddItem\n            submitAnime={ (t, d) => this.submitAnime(t, d) }\n            submitManga={ (t, d) => this.submitManga(t, d) }\n            type={this.props.mediaType}/>\n        </div>\n      );\n    }\n\n    let items = [];\n    for (const [key, value] of Object.entries(this.state.data)) {\n      items.push({title: key, season: value.season, episode: value.episode, chapter: value.chapter, link: value.link});\n    }\n    console.log(items)\n\n    return (\n      <div className='ItemList'>\n        <AddItem\n          submitAnime={ (t, d) => this.submitAnime(t, d) }\n          submitManga={ (t, d) => this.submitManga(t, d) }\n          type={this.props.mediaType}/>\n        {items.map(a => {\n          return <Item\n                    key={a.title}\n                    title={a.title}\n                    season={a.season}\n                    episode={a.episode}\n                    chapter={a.chapter}\n                    link={a.link}\n                    type={this.props.mediaType}\n                    update={this.updateItem}\n                    toggleSnackbar={this.props.toggleSnackbar}/>})}\n      </div>\n    );\n  }\n}\n\nexport default ItemList;\n*/\n","import React, { useState, useReducer, useEffect } from 'react';\nimport { navigate } from \"@reach/router\";\n\nimport './Home.css';\n\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport ItemList from '../components/ItemList';\n\n\nfunction Home(props) {\n  const [tab, changeTab]           = useState('anime');\n  const [snackbar, toggleSnackbar] = useReducer((s, _) => !s, false);\n\n  const handleSignOutClick = () => {\n    props.signOut();\n    navigate('/login');\n  }\n  const refresh = async () => {\n    if (!await props.isValid()) {\n      navigate('/login');\n    }\n  }\n  useEffect(() => {\n    const a = async () => {\n      await refresh();\n    }\n    a();\n  });\n\n  return (\n    <div className='Home'>\n      <Paper>\n        <Tabs\n          value={tab}\n          onChange={(_, v) => changeTab(v)}\n          centered>\n          <Tab value='anime' label='anime' />\n          <Tab value='manga' label='manga' />\n        </Tabs>\n      </Paper>\n\n      <br /><br />\n\n      <Button\n        className='signout'\n        variant='outlined'\n        color='primary'\n        onClick={handleSignOutClick}>\n        Sign Out\n      </Button>\n\n      <br /><br />\n\n      <ItemList\n        username={props.username}\n        tab={tab}\n        type='ongoing'\n        refresh={refresh}\n        toggleSnackbar={toggleSnackbar} />\n\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={snackbar}\n        autoHideDuration={3000}\n        onClose={toggleSnackbar}\n        message=\"Link copied.\" />\n    </div>\n  );\n}\n\nexport default Home;\n\n/*\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tab: 'anime',\n      snackbarOpen: false,\n    };\n\n    if (!this.props.username || !this.props.token) {\n      this.state = { leavePage: 'login' };\n    }\n\n    this.refresh            = this.refresh.bind(this);\n    this.handleTab          = this.handleTab.bind(this);\n    this.toggleSnackbar     = this.toggleSnackbar.bind(this);\n    this.handleSignOutClick = this.handleSignOutClick.bind(this);\n  }\n\n  toggleSnackbar() {\n    this.setState({ snackbarOpen: !this.state.snackbarOpen });\n  }\n\n  async componentDidMount() {\n    await this.refresh();\n  }\n\n  async refresh() {\n    if (!await this.props.isValid()) {\n      this.setState({ leavePage: 'login' });\n    }\n    this.setState({\n      userData: await this.props.server.getUserData(this.props.username, this.state.tab, 'ongoing')\n    });\n  }\n\n  async shouldComponentUpdate(nextProps, nextState) {\n    if (!await nextProps.isValid()) {\n      this.setState({ leavePage: 'login' });\n    }\n    return  true;\n  }\n\n  async handleTab(e, newValue) {\n    this.setState({ tab: newValue });\n    await this.refresh()\n  }\n\n  handleSignOutClick() {\n    this.props.signOut();\n    this.setState({ leavePage: 'login' });\n  }\n\n  render() {\n    if (this.state.leavePage) {\n      return <Redirect to={this.state.leavePage} />;\n    }\n\n    return (\n      <div className='Home'>\n        <Paper>\n          <Tabs\n            value={this.state.tab}\n            onChange={this.handleTab}\n            centered>\n            <Tab value='anime' label='anime' />\n            <Tab value='manga' label='manga' />\n          </Tabs>\n        </Paper>\n\n        <br/><br/>\n\n        <Button\n          className='signout'\n          variant='outlined'\n          color='primary'\n          onClick={this.handleSignOutClick}>\n            Sign Out\n        </Button>\n        <br/><br/>\n        <ItemList\n          username={this.props.username}\n          mediaType={this.state.tab}\n          type='ongoing'\n          server={this.props.server}\n          data={this.state.userData}\n          refresh={this.refresh}\n          toggleSnackbar={this.toggleSnackbar}/>\n\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.state.snackbarOpen}\n          autoHideDuration={3000}\n          onClose={this.toggleSnackbar}\n          message=\"Link copied.\"/>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n*/\n","\nimport React, { useState, useEffect, useReducer } from 'react';\nimport { navigate } from \"@reach/router\";\n\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Typography from '@material-ui/core/Typography';\n\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport './LoginSignup.css';\n\nimport { userExists, newUser } from '../server';\n\n\nfunction hoverReducer(state, action) {\n  switch (action) {\n    case 'enter':\n      return true;\n    case 'leave':\n      return false;\n    default:\n      return false;\n  }\n}\n\nfunction Signup(props) {\n  const [username, setUsername]          = useState('');\n  const [password, setPassword]          = useState('');\n  const [confirm, setConfirm]            = useState('');\n  const [uError, setUError]              = useState('');\n  const [pError, setPError]              = useState('');\n  const [cError, setCError]              = useState('');\n  const [hidePassword, swapHidePassword] = useReducer((s, _) => !s, true);\n  const [hideConfirm, swapHideConfirm]   = useReducer((s, _) => !s, true);\n  const [loginHover, swapLoginHover]     = useReducer(hoverReducer, false);\n  const [signupHover, swapSignupHover]   = useReducer(hoverReducer, false);\n\n  const handleText = (type, value) => {\n    if (type === 'username') {\n      setUsername(value);\n      setUError('');\n    } else if (type === 'password') {\n      setPassword(value);\n      setPError('');\n    } else if (type === 'confirm') {\n      setConfirm(value);\n      setCError('');\n    }\n  }\n  const handleInputClick = (type) => {\n    if (type === 'username') {\n      setUError('');\n    } else if (type === 'password') {\n      setPError('');\n    } else if (type === 'confirm') {\n      setCError('');\n    }\n  }\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSignupClick();\n    }\n  }\n  const handleSignupClick = async () => {\n    if (username === '') {\n      setUError('Invalid username.');\n      return;\n    } else if (await userExists(username)) {\n      setUError('Username already taken.');\n      return;\n    }\n\n    if (password === '') {\n      setPError('Invalid password.');\n      return;\n    } else if (password !== confirm) {\n      setPError('Passwords don\\'t match.');\n      return;\n    }\n\n    newUser(username, password);\n    await props.logIn(username);\n  }\n\n  useEffect(() => {\n    const a = async () => {\n      if (await props.isValid()) {\n        navigate('/home');\n      }\n    }\n    a();\n  });\n\n  return (\n    <div className='LoginSignup' onKeyPress={handleKeyPress}>\n      <Typography variant='h5'>\n        SIGN UP\n      </Typography>\n\n      <br />\n\n      <FormControl error={Boolean(uError)}>\n        <InputLabel>Username</InputLabel>\n        <Input\n          className='input'\n          value={username}\n          onClick={() => handleInputClick('username')}\n          onChange={e => handleText('username', e.target.value)} />\n        <FormHelperText color='secondary'>{uError || ' '}</FormHelperText>\n      </FormControl>\n\n      <br /><br />\n\n      <FormControl error={Boolean(pError)}>\n        <InputLabel>Password</InputLabel>\n        <Input\n          className='input'\n          error={Boolean(pError)}\n          type={hidePassword ? 'password' : 'text'}\n          value={password}\n          onClick={() => handleInputClick('password')}\n          onChange={e => handleText('password', e.target.value)}\n          endAdornment={\n            <InputAdornment position='end'>\n              <IconButton onClick={swapHidePassword}>\n                {hidePassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>} />\n        <FormHelperText color='secondary'>{pError || ' '}</FormHelperText>\n      </FormControl>\n\n      <br /><br />\n\n      <FormControl error={Boolean(cError)}>\n        <InputLabel>Confirm Password</InputLabel>\n        <Input\n          className='input'\n          error={Boolean(cError)}\n          type={hideConfirm ? 'password' : 'text'}\n          value={confirm}\n          onClick={() => handleInputClick('confirm')}\n          onChange={e => handleText('confirm', e.target.value)}\n          endAdornment={\n            <InputAdornment position='end'>\n              <IconButton onClick={swapHideConfirm}>\n                {hideConfirm ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>} />\n        <FormHelperText color='secondary'>{cError || ' '}</FormHelperText>\n      </FormControl>\n\n      <br /><br />\n\n      <Button\n        className='button'\n        variant={signupHover ? 'contained' : 'outlined'}\n        color='primary'\n        onClick={handleSignupClick}\n        onMouseEnter={() => swapSignupHover('enter')}\n        onMouseLeave={() => swapSignupHover('leave')}>\n        Sign up\n      </Button>\n\n      <br /><br />\n\n      <Button\n        className='button'\n        variant={loginHover ? 'outlined' : ''}\n        color='primary'\n        onClick={ () => navigate('/login') }\n        onMouseEnter={() => swapLoginHover('enter')}\n        onMouseLeave={() => swapLoginHover('leave')}>\n        Login\n      </Button>\n    </div>\n  )\n}\n\nexport default Signup;\n","import React, {useState} from 'react';\nimport { Router } from \"@reach/router\";\n\nimport './App.css';\n\nimport {generateToken, verifyToken, destroyToken} from './server';\nimport Login    from './views/Login.jsx';\nimport Home     from './views/Home.jsx';\nimport Signup   from './views/Signup.jsx';\n\n\nfunction App(props) {\n  const [username, setUsername] = useState(localStorage.getItem('username'));\n  const [token, setToken]       = useState(localStorage.getItem('token'));\n\n  const logIn = async (u) => {\n    const t = await generateToken(u);\n    setUsername(u);\n    setToken(t);\n    localStorage.setItem('username', u);\n    localStorage.setItem('token', t);\n  }\n  const signOut = () => {\n    destroyToken(username);\n    setUsername(undefined);\n    setToken(undefined);\n    localStorage.removeItem('username');\n    localStorage.removeItem('token');\n  }\n  const isValidSession = async () => {\n    return await verifyToken(username, token);\n  }\n\n  return (\n    <Router>\n      <Home\n        path='/home'\n        username={username}\n        token={token}\n        signOut={ () => signOut() }\n        isValid={ () => isValidSession() }/>\n      <Login\n        default\n        path='/login'\n        logIn={ (u) => logIn(u) }\n        isValid={ () => isValidSession() } />\n      <Signup\n        path='/signup'\n        logIn={ (u) => logIn(u) }\n        isValid={ () => isValidSession() } />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#987CCF',\n    },\n    secondary: {\n      main: '#EE99FF',\n    },\n    background: {\n      default: '#222639',\n      paper: '#1B1E2E',\n    },\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}